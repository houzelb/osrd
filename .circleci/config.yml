version: 2.1

orbs:
  docker: circleci/docker@2.4.0

executors:
  python:
    docker:
      - image: cimg/python:3.9
  rust:
    docker:
      - image: cimg/rust:1.82
  node:
    docker:
      - image: cimg/node:20.5
  java:
    docker:
      - image: cimg/openjdk:17.0

jobs:
  check-core:
    executor: java
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-core-{{ checksum "core/build.gradle" }}
      - run:
          name: Run Core Tests
          command: |
            cd core
            ./gradlew check
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-core-{{ checksum "core/build.gradle" }}
      - store_test_results:
          path: core/build/test-results
      - store_artifacts:
          path: core/build/reports

  check-editoast:
    executor: rust
    docker:
      - image: postgis/postgis
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
      - image: valkey/valkey
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-editoast-{{ checksum "editoast/Cargo.lock" }}
      - run:
          name: Setup Database
          command: |
            psql postgresql://postgres:password@localhost:5432 -f docker/init_db.sql
      - run:
          name: Run Editoast Tests
          working_directory: editoast
          environment:
            DATABASE_URL: postgres://osrd:password@localhost:5432/osrd
            CI: "true"
          command: |
            cargo install diesel_cli --no-default-features --features postgres
            diesel migration run --locked-schema
            cargo test --workspace --verbose
      - save_cache:
          paths:
            - ~/.cargo
            - editoast/target
          key: cargo-editoast-{{ checksum "editoast/Cargo.lock" }}

  check-gateway:
    executor: rust
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-gateway-{{ checksum "gateway/Cargo.lock" }}
      - run:
          name: Run Gateway Tests
          working_directory: gateway
          command: |
            cargo test --verbose
      - run:
          name: Check Gateway Format
          working_directory: gateway
          command: |
            cargo fmt --check
      - run:
          name: Run Gateway Clippy
          working_directory: gateway
          command: |
            cargo clippy --all-features --all-targets -- -D warnings
      - save_cache:
          paths:
            - ~/.cargo
            - gateway/target
          key: cargo-gateway-{{ checksum "gateway/Cargo.lock" }}

  check-osrdyne:
    executor: rust
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-osrdyne-{{ checksum "osrdyne/Cargo.lock" }}
      - run:
          name: Run OSRDyne Tests
          working_directory: osrdyne
          command: |
            cargo test --verbose
      - run:
          name: Check OSRDyne Format
          working_directory: osrdyne
          command: |
            cargo fmt --check
      - run:
          name: Run OSRDyne Clippy
          working_directory: osrdyne
          command: |
            cargo clippy --all-features --all-targets -- -D warnings
      - save_cache:
          paths:
            - ~/.cargo
            - osrdyne/target
          key: cargo-osrdyne-{{ checksum "osrdyne/Cargo.lock" }}

  check-front:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-{{ checksum "front/package-lock.json" }}
      - run:
          name: Install Dependencies
          working_directory: front
          command: npm ci
      - run:
          name: Check Code Formatting
          working_directory: front
          command: npx prettier . --check
      - run:
          name: Check i18n Keys
          working_directory: front
          command: npm run i18n-checker
      - run:
          name: Run Tests
          working_directory: front
          command: npm run test
      - save_cache:
          paths:
            - front/node_modules
          key: npm-{{ checksum "front/package-lock.json" }}

workflows:
  version: 2
  tests:
    jobs:
      - check-core
      - check-editoast
      - check-gateway
      - check-osrdyne
      - check-front
